/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.account.controller;

import com.account.model.AccountRoleIDReturnModel;
import com.account.model.AccountRoleRequestModel;
import com.account.model.AccountRoleReturnModel;
import com.account.model.ErrorResponse;
import java.util.UUID;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import jakarta.validation.Valid;
import jakarta.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import jakarta.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
public interface RoleApi {

    /**
     * POST /api/v1/account/{account-id}/role
     * Assign or revoke role
     *
     * @param accountId Id of account to assign/revoke role (required)
     * @param accountRoleRequestModel Account role and status (required)
     * @return OK (status code 200)
     *         or Created (status code 201)
     *         or Bad request. Data is invalid (status code 400)
     *         or Account doesn&#39;t exist (status code 404)
     *         or unexpected error (status code 200)
     */
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/api/v1/account/{account-id}/role",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    ResponseEntity<AccountRoleReturnModel> apiV1AccountAccountIdRolePost(
         @PathVariable("account-id") UUID accountId,
         @Valid @RequestBody AccountRoleRequestModel accountRoleRequestModel
    ) throws Exception;


    /**
     * GET /api/v1/account/{account-id}/role/{role}
     * Returns account role id for given account id and role
     *
     * @param accountId Id of account to get account role id (required)
     * @param role Role of account to get account role id (required)
     * @return OK (status code 200)
     *         or Account doesn&#39;t exist (status code 404)
     */
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/api/v1/account/{account-id}/role/{role}",
        produces = { "application/json" }
    )
    ResponseEntity<AccountRoleIDReturnModel> apiV1AccountAccountIdRoleRoleGet(
         @PathVariable("account-id") UUID accountId,
         @PathVariable("role") String role
    ) throws Exception;

}
